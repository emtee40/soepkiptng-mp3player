#!/usr/bin/perl

use Data::Dumper;
use Getopt::Std;

getopts('s:d:p:C:h');

$opt_h and die <<EOF;

usage: cdda [-s cddb_server] [-d cdrom_device] [-p proxy] [-C cachedir]

EOF

if(@ARGV) {
	# stream track(s) to stdout
	my @prog = qw/cdparanoia -qr/;
	if(defined($opt_d)) { push @prog, "-d$opt_d"; }
	exec @prog, @ARGV, "-";
	die "$prog[0]: $!\n";
}

use CDDB_get qw(get_cddb);

$config{CDDB_HOST}= $opt_s if defined $opt_s;
$config{CD_DEVICE} = $opt_d if defined $opt_d;
$config{input} = 1;

my %cd=get_cddb(\%config);
print Dumper(\%cd);die;

if(defined $cd{title}) {
	push @out, $cd{artist};
	push @out, $cd{title};
	my $i = 1;
	foreach my $t (@{$cd{track}}) {
		push @out, sprintf "%d %s",
			$cddb->current_track_time_in_seconds,
			$cddb->current_track_info;
		$i++;
	}
} else {
	$cddb->create_new;
	push @out, "?";
	push @out, "?";
	while($tr = $cddb->next_track) {
		push @out, sprintf "%d Track %d",
			$cddb->current_track_time_in_seconds, $tr;
	}
}
unshift @out, join(" ", $cddb->discid, $cddb->total_tracks, $cddb->offsets, $cddb->disc_length);

print map { s/\s+/ /g; "$_\n"; } @out;

#!/usr/bin/perl

use LWP::UserAgent;
use Cwd 'abs_path';
use DBI;
use Getopt::Std;

sub encode_url($);
sub encode_html($);
sub getlyrics_purelyrics_com($$$$$);
sub getlyrics_lyricsdomain_com($$$$$);

# find program directory
$_ = $0;
while(-l) {
	my $l = readlink or die "readlink $_: $!\n";
	if($l =~ m|^/|) { $_ = $l; } else { s|[^/]*$|/$l|; }
}
m|(.*)/|;
my $progdir = abs_path($1);

require "$progdir/soepkiptng.lib";

getopts('c:');

read_configfile(\%conf, $opt_c);

if($ENV{GATEWAY_INTERFACE} =~ /^CGI/) {
	use CGI;
	$q = new CGI;
	$artist = $q->param('ar');
	$title = $q->param('ti');
	$album = $q->param('al');
} elsif(@ARGV == 0) {
	open F, $conf{statusfile}
		or die "$conf{statusfile}: $!\n";
	chop($nowplaying = <F>);
	chop ((undef, undef, undef, undef, undef, undef, undef, $artist, $title, $album, $track) = <F>);
	close F;
} else {
	($artist, $album, $title) = @ARGV;
}

my $ua = new LWP::UserAgent;
$ua->agent('Mozilla/4.77 [en] (X11; I; Linux 2.4.19 i686)');

my $from;
my $lyrics =
	getlyrics_purelyrics_com($ua, $artist, $album, $title, \$from) ||
	getlyrics_lyricsdomain_com($ua, $artist, $album, $title, \$from)
	or die "no matches\n";

$lyrics =~ s/^\s+|\s+$//g;

if($ENV{GATEWAY_INTERFACE} =~ /^CGI/) {
	$artist = encode_html($artist);
	$title = encode_html($title);
	$album = encode_html($album);
	$lyrics = encode_html($lyrics);
	$fromstr = encode_html($from);
	$fromurl = encode_html($from);
	print $q->header;
	print <<EOF;
<html>
<head>
<title>Lyrics: $artist - $title ($album)</title>
</head>
<body>
<h1>Lyrics: $artist - $title ($album)</h1>
<pre>
$lyrics
</pre>
<br>(<a href="$fromurl"><font size=-2><i>$fromstr</i></font></a>)
</body>
</html>
EOF

} else {
	print "$lyrics\n\n[$from]\n";
}


##############################################################################

sub encode_url($) {
	my ($a) = @_;

	$a =~ s|([^- ./\w])|sprintf "%%%02x", ord($1)|ge;
	$a =~ s| |+|g;
	$a;
}

sub encode_html($) {
	my ($a) = @_;

	$a =~ s/&/&amp;/g;
	$a =~ s/</&lt;/g;
	$a =~ s/>/&gt;/g;
	$a;
}

sub getlyrics_purelyrics_com($$$$$) {
	my ($ua, $artist, $album, $title, $from) = @_;

	my $baseurl = "http://www.purelyrics.com/index.php";

	my $url = "$baseurl?search_advsubmit2=Search";
	$url .= "&search_artist=" . encode_url(lc $artist);
	$url .= "&search_album=" . encode_url(lc $album);
	$url .= "&search_title=" . encode_url(lc $title);

	my $req = HTTP::Request->new(GET => $url);
	my $res = $ua->request($req);

	$res->code == 200
		or return undef; #die sprintf "%d %s\n", $res->code, $res->message;

	$res->content =~ /^(\d+) matches.*<a href="([^"]+)">/m
		or return undef; #die "no matches\n";

	my ($num, $url) = ($1, $2);
	$num == 1
		or return undef; #die "Not a single match\n";

	$$from = "http://www.purelyrics.com/$url";
	$req = HTTP::Request->new(GET => $$from);
	$res = $ua->request($req);

	$res->code == 200
		or return undef; #die sprintf "%d %s\n", $res->code, $res->message;

	my $out;
	foreach(split /\n+/, $res->content) {
		s/^\s+|\s+$|\r+//g;
		if(s/.*<font class="capitalFont">//) {
			$lyr = 1;
		}
		if($lyr) {
			s|<br />|| or $lyr = 0;
			s|<[^>]+>||g;
			s|\s+$||;
			$out .= "$_\n";
		}
	}
	return $out;
}

sub getlyrics_lyricsdomain_com($$$$$) {
	my ($ua, $artist, $album, $title, $from) = @_;

	my $url = "http://www.lyricsdomain.com/src.php?action=+++Search+++";
	$url .= "&artist=" . encode_url(lc $artist);
	$url .= "&query=" . encode_url(lc $title);

	my $req = HTTP::Request->new(GET => $url);
	my $res = $ua->request($req);

	$res->code == 200
		or return undef; #die sprintf "%d %s\n", $res->code, $res->message;

	$res->content =~ /Your query generated (\d+) matches.*lyricsdomain\.asp\?cat=(\d+)">/m
		or return undef; #die "no matches\n";

	my ($num, $lyrnum) = ($1, $2);
	$num == 1
		or return undef; #die "Not a single match\n";

	$$from = "http://www.lyricsdomain.com/lyrics/$lyrnum/";
	$req = HTTP::Request->new(GET => $$from);
	$res = $ua->request($req);

	$res->code == 200
		or return undef; #die sprintf "%d %s\n", $res->code, $res->message;

	my $out;
	foreach(split /\n+/, $res->content) {
		s/^\s+|\s+$|\r+//g;
		if(/Send this song to a friend/) {
			$lyr = 1;
			next;
		}
		if($lyr) {
			last if m|</pre>|;
			s|<[^>]+>||g;
			s|\s+$||;
			$out .= "$_\n";
		}
	}
	return $out;
}

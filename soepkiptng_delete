#!/usr/bin/perl
############################################################################
# soepkiptng (c) copyright 2000 Eric Lammerts <eric@lammerts.org>.
# $Id$
############################################################################
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2, as 
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# A copy of the GNU General Public License is available on the World Wide Web
# at `http://www.gnu.org/copyleft/gpl.html'.  You can also obtain it by
# writing to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
############################################################################

$configfile = "/etc/soepkiptng.conf";

use Cwd 'abs_path';
use DBI;
use Getopt::Std;

getopts('qh');

# read config file
open F, $configfile
	or die "$configfile: $!\n";
while(<F>) {
	/^#/ and next;
	s/\s+$//;
	/./ or next;
	if(/^(\w+)\s*=\s*(.*?)\s*$/) {
		$f = $1;
		${$f} = $2;
	} elsif(/^\s+(.*?)\s*$/) {
		# continuation line
		${$f} .= "\n$1";
	} else {
		die "$configfile line $.: invalid format\n";
	}
}
close F;

$ENV{'PATH'} = "$progdir/bin:$ENV{'PATH'}";
require "$progdir/soepkiptng.lib";

if($opt_h) {
	print <<EOF;
Usage: soepkiptng_delete [-qc] [dir]

Soepkiptng_delete deletes files from the SoepkipTNG database that do not exist
anymore.

    -q : quiet
    -c : permanently delete entries that are not present

EOF
	exit;
}

$dbh = DBI->connect("DBI:$db_type:$db_name:$db_host", $db_user, $db_pass)
	or die "can't connect to database";

$sth = $dbh->prepare("SELECT filename FROM song WHERE present AND filename like ?");
$sth->execute(($ARGV[0]? abs_path($ARGV[0]) : "/") . "%");

while(($filename) = $sth->fetchrow_array) {
	-s $filename and next;
	warn "Deleting $filename from database.\n" unless $opt_q;
	$dbh->do("UPDATE song SET present=0 WHERE filename=?", undef, $filename);
}

if($opt_c) {
	$dbh->do("DELETE FROM song WHERE not present");
}

$dbh->disconnect();

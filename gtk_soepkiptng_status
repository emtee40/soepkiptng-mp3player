#!/usr/bin/perl
############################################################################
# soepkiptng (c) copyright 2000 Eric Lammerts <eric@lammerts.org>.
# $Id$
############################################################################
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2, as 
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# A copy of the GNU General Public License is available on the World Wide Web
# at `http://www.gnu.org/copyleft/gpl.html'.  You can also obtain it by
# writing to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
############################################################################

use Cwd 'abs_path';
use DBI;
use Getopt::Std;
use Gnome;

# find program directory
$_ = $0;
while(-l) {
	my $l = readlink or die "readlink $_: $!\n";
	if($l =~ m|^/|) { $_ = $l; } else { s|[^/]*$|/$l|; }
}
m|(.*)/|;
my $progdir = abs_path($1);

require "$progdir/soepkiptng.lib";

getopts('c:');

read_configfile(\%conf, $opt_c);

init Gnome "soepkiptng.pl";

#init Gnome::Panel::AppletWidget 'soepkiptng.pl';

$SIG{'HUP'} = sub {
	exec $0;
	die;
};

my $pause_xpm = (
"16 16 4 1",
"       c None s None",
".      c black",
"X      c #808080",
"o      c white",
"                ",
"                ",
"                ",
"                ",
"   ...    ...   ",
"   ...    ...   ",
"   ...    ...   ",
"   ...    ...   ",
"   ...    ...   ",
"   ...    ...   ",
"   ...    ...   ",
"                ",
"                ",
"                ",
"                ",
"                ");

#my $window = new Gtk::Window;
my $window = new Gtk::Widget "GtkWindow",
	type => -toplevel,
	title => "SoepkipTNG status",
	allow_grow => 1,
	allow_shrink => 1,
;

#$window = new Gnome::Panel::AppletWidget 'soepkiptng.pl';
#realize $window;

#my $Label = Gtk::Widget->new("Gnome::CanvasText",
#	text => "A string\nToinen rivi",
#	font_gdk => load Gtk::Gdk::Font('-*-helvetica-*'),
#	fill_color => 'steelblue',
#	anchor => 'center',
#);
      
my $label = new Gtk::Label("Artist\nTitle\nAlbum");
$label->set_justify('left');
#$label->set_usize(300,40);

my $label2 = new Gtk::Label("");

$button_pause = Gtk::Widget->new("GtkButton",
 -label   => "Pause",
 -border_width => 1,
 -clicked => sub { pause(); },
 -visible=>1,
);

$button_kill = Gtk::Widget->new("GtkButton",
 -label   => "Kill",
 -border_width => 1,
 -clicked => \&kill_song,
 -visible=>1,
);


$hbox = new Gtk::HBox 0, 1;
show $hbox;
$window->add($hbox);

$vbox = new Gtk::VBox 0, 1;

$hbox->pack_start($label, 0, 1, 3);
$hbox->pack_start($label2, 1, 1, 3);
$hbox->pack_start($vbox, 0, 0, 0);

$vbox->pack_start($button_pause, 0, 0, 1);
#$vbox->pack_start($button_resume, 0, 0, 1);
$vbox->pack_start($button_kill, 0, 0, 1);


#$splashimage = new Gtk::Pixmap($p,$pause_xpm)

$mtime = -1;
$paused = -1;
update_song();
my $id = Gtk->timeout_add(250, \&update_song);

$window->signal_connect('destroy', sub { Gtk->exit(0); });

$window->show_all;

Gtk->main;
# Gnome::Panel::AppletWidget;


sub update_song() {
	my $newmtime = (stat $conf{statusfile})[9];

	if($newmtime != $mtime) {
		$mtime = $newmtime;
		if(open F, $conf{statusfile}) {
			my ($nowplaying, $filename);
			chop($nowplaying = <F>);
			chop($filename = <F>);
			<F>;
			$playerpid = 0 + <F>;
			chop ((undef, undef, undef, undef,
			    $now_playing->{artist},
			    $now_playing->{title},
			    $now_playing->{album},
			    $now_playing->{track}) = <F>);
			close F;

			if($nowplaying > 0) {
				my $query = "SELECT song.title as title,artist.name as artist,album.name as album,song.id,song.track" .
					 " FROM song,artist,album" .
					 " WHERE song.id=?" .
					 " AND song.artist_id=artist.id AND song.album_id=album.id";

				if($dbh = DBI->connect("DBI:$conf{db_type}:$conf{db_name}:$conf{db_host}", $conf{db_user}, $conf{db_pass})) {
					my $sth = $dbh->prepare($query);
					my $rv = $sth->execute($nowplaying);
					if(my $n = $sth->fetchrow_hashref) {
						$now_playing = $n;
					}
					$sth->finish;
					$dbh->disconnect;
				}
				$label->set_text(sprintf("%s\n%s\n[%02d] %s",
					$now_playing->{artist},
					$now_playing->{title},
					$now_playing->{track},
					$now_playing->{album}));
			} else {
				$filename =~ /^(.*)\/(.*?)$/;
				$label->set_text("$1\n$2\n");
			}
		} else {
			$label->set_text("** soepkiptngd not running!\n\n");
		}
	}

#	if($playerpid) {
#		my $p = is_paused($playerpid);
#		if($p != $paused) {
#			if($p) {
#				$button_pause->set_title("Resume");
#			} else {
#				$button_pause->set_title("Pause");
#			}
#			$paused = $p;
#		}
#	}
	return 1;
};
